#!/bin/bash
BASE_COLLECTION_PATH="must-gather"
mkdir -p ${BASE_COLLECTION_PATH}

# Command line argument
SINCE_TIME=$1

#delta time function
delta_time() {
  end=$(date +%s)
  totalTime=$((end-$1))
  printf "total time taken by collection was %s seconds" "${totalTime}" >> ${BASE_COLLECTION_PATH}/$2.log 2>&1
}

start_total=$(date +%s)
# timestamp for starting of the script
START_TIME=$(date +%r)
start=$(date +%s)
printf "collection started at: %s \n" "${START_TIME}" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1

# Call pre-install.sh
start=$(date +%s)
pre-install.sh
delta_time start pre_install_time

# Call other gather scripts
start=$(date +%s)
gather_namespaced_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
delta_time start gather_namespaced_resources_time

start=$(date +%s)
gather_clusterscoped_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
delta_time start gather_clusterscoped_resources_time

start=$(date +%s)
gather_noobaa_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
delta_time start gather_noobaa_resources_time

storageClusterPresent=$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
externalStorageClusterPresent=$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.spec.externalStorage.enable}}{{"\n"}}{{end}}')
reconcileStrategy=$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.spec.multiCloudGateway.reconcileStrategy}}{{"\n"}}{{end}}')

start=$(date +%s)
if [ "${externalStorageClusterPresent}" == true ]; then
    echo "Collecting limited ceph logs since external cluster is present" | tee -a  "${BASE_COLLECTION_PATH}"/gather-debug.log
    gather_common_ceph_resources "${BASE_COLLECTION_PATH}" "${SINCE_TIME}"
elif [ -z "${storageClusterPresent}" ]; then
    echo "Skipping ceph collection as Storage Cluster is not present" | tee -a  "${BASE_COLLECTION_PATH}"/gather-debug.log
elif [ "${reconcileStrategy}" = "standalone" ]; then
    echo "Skipping ceph collection as this is a MCG only cluster" | tee -a  "${BASE_COLLECTION_PATH}"/gather-debug.log
else
    echo "Collecting entire ceph logs" | tee -a "${BASE_COLLECTION_PATH}"/gather-debug.log
    gather_ceph_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
fi
delta_time start gather_ceph_resources_time

# Call post-uninstall.sh
start=$(date +%s)
post-uninstall.sh
delta_time start post_uninstall_time

# timestamp for ending of the script
END_TIME=$(date +%r)
end=$(date +%s)
totalTime=$((end-start))
{
    printf "total time taken by collection was %s seconds \n" ${totalTime}
    printf "collection ended at: %s \n" "${END_TIME}"
    echo "deleting empty files"

} >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
find "${BASE_COLLECTION_PATH}" -empty -delete >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1

delta_time start_total total_time
exit 0
